var dY=dY||{};dY.Arr=function(meta,hrs){this.meta=meta;this.hrs=hrs;}
dY.Arr.prototype.type=function(){return-1;};dY.Arr.prototype.metaOf=function(zonekey){return this.meta[zonekey[0]][zonekey[1]];};var dY=dY||{};dY.graph={};dY.graph.addBoard=function(boardDims){dY.report("dy: attempting to add a board to the document");if(!boardDims.hasOwnProperty("margin"))boardDims.margin=10;if(typeof(boardDims.margin)=="number")boardDims.margin={top:boardDims.margin,right:boardDims.margin,bottom:boardDims.margin,left:boardDims.margin};if(!boardDims.hasOwnProperty("width")||!boardDims.hasOwnProperty("height")){if(!boardDims.hasOwnProperty("inWidth")||!boardDims.hasOwnProperty("inHeight")){console.log("dY.graph.addBoard requires a defined width and height or a defined inWidth and inHeight");return false;}
boardDims.width=boardDims.inWidth+boardDims.margin.left+boardDims.margin.right
boardDims.height=boardDims.inHeight+boardDims.margin.top+boardDims.margin.bottom}else{boardDims.inWidth=boardDims.width-boardDims.margin.left-boardDims.margin.right
boardDims.inHeight=boardDims.height-boardDims.margin.top-boardDims.margin.bottom}
drawDims={width:boardDims.inWidth,height:boardDims.inHeight,xRange:[0,boardDims.inWidth],yRange:[0,boardDims.inHeight]}
svg=d3.select("#dy-canvas").append("svg").attr("class","board").attr("width",boardDims.width).attr("height",boardDims.height).append("g").attr("transform","translate("+boardDims.margin.left+","+boardDims.margin.top+")");return{g:svg,bDims:boardDims,dDims:drawDims}}
var dY=dY||{};dY.Hr=function(hourOfYear,data){this.hourOfYear=hourOfYear;this.data=data;}
dY.Hr.prototype.hourOfDay=function(){return this.hourOfYear%24;};dY.Hr.prototype.dayOfYear=function(){return Math.floor(this.hourOfYear/24);};dY.Hr.prototype.valueOf=function(zonekey){return this.data[zonekey[0]][zonekey[1]];};var dY=dY||{};dY.parser={};function OnDYDataLoaded(data,fields){dY.report("dhr: THIS IS A PLACEHOLDER FUNCTION - REPLACE WITH YOUR OWN");}
dY.report=function(msg){if($("#dy-console").length){var text=$("#dy-console").val()+"\n"+msg;$("#dy-console").text(text);$('#dy-console').scrollTop($('#dy-console')[0].scrollHeight);}}
dY.parser.zoneKeyToString=function(zoneString,keyString){return zoneString.trim()+":"+keyString.trim()}
dY.parser.stringToZoneKey=function(str){str=str.trim();if(str.indexOf(":")==-1){if(str=="Date/Time")return false;dY.report("dy: Improperly formatted string for zoneKey. No separator found for '"+str+"'");return false;}
return[str.split(":")[0].trim(),str.substring(str.indexOf(":")+1)]}
dY.parser.handleParseResults=function(results){dY.report("dy: Handling parse results.");if(results.errors.length>0){dY.report("dy: Parser encountered "+results.errors.length+" error(s).")
results.errors.forEach(function(error,n){if(error.code=="TooFewFields"&&error.row==results.data.length-1){dY.report("\tThe last row contained improperly formatted data. This happens all the time.");results.data.splice(results.data.length-1,1);}else{dY.report("\t"+n+"\t"+error.code+"; "+error.message+"; row: "+error.row);}});}
meta={};if(results.meta.fields.length>0){dY.report("dy: Parser found "+results.meta.fields.length+" columns. Not including Date/Time, these are:")
zoneStrings=new Set();results.meta.fields.forEach(function(field,n){if(!dY.parser.stringToZoneKey(field))return;zoneStrings.add(dY.parser.stringToZoneKey(field)[0]);});zoneStrings=Array.from(zoneStrings);zoneStrings.forEach(function(zoneStr,n){meta[zoneStr]=[];results.meta.fields.forEach(function(field,n){key=dY.parser.stringToZoneKey(field);if(key&&key[0]==zoneStr)meta[zoneStr][key[1]]=[];});});for(var zon in meta){dY.report("\t"+zon);for(var key in meta[zon]){dY.report("\t\t"+key);}}}
dY.report("dy: Parser found "+results.data.length+" rows. Parser doesn't care about the number or order.")
alls=[];for(var zon in meta){for(var key in meta[zon]){alls[[zon,key]]=[];}}
hrs=[];results.data.forEach(function(row,n){hourOfYear=dY.datetime.dateToHourOfYear(dY.datetime.dateStringToDate(row["Date/Time"]));data={};for(var zon in meta){data[zon]={};for(var key in meta[zon]){value=row[dY.parser.zoneKeyToString(zon,key)];data[zon][key]=value;alls[[zon,key]].push(value);}}
hrs.push(new dY.Hr(hourOfYear,data));});for(var zon in meta){for(var key in meta[zon]){allsorted=alls[[zon,key]].sort(function(a,b){return a-b});len=allsorted.length;meta[zon][key].min=allsorted[0];meta[zon][key].q1=allsorted[Math.floor(len*.25)-1];meta[zon][key].q2=allsorted[Math.floor(len*.50)-1];meta[zon][key].q3=allsorted[Math.floor(len*.75)-1];meta[zon][key].max=allsorted[len-1];meta[zon][key].domain=[meta[zon][key].min,meta[zon][key].max];meta[zon][key].median=meta[zon][key].q2;sum=0;for(var i=0;i<allsorted.length;i++){sum+=allsorted[i];}
meta[zon][key].average=sum/len;}}
arr=new dY.Arr(meta,hrs)
OnDYDataLoaded(arr);}
dY.parser.HandleSingleFileUpload=function(evt){var file=evt.target.files[0];Papa.parse(file,{header:true,dynamicTyping:true,complete:function(results){dY.parser.handleParseResults(results);}});}
var dY=dY||{};dY.util={};dY.util.loadCSS=function(path){dY.report("dy: attempting to load CSS file "+path);var file=location.pathname.split("/").pop();var link=document.createElement("link");link.href=path;link.type="text/css";link.rel="stylesheet";link.media="screen,print";document.getElementsByTagName("head")[0].appendChild(link);}
dY.datetime={};dY.datetime.year=1970;dY.datetime.dateStringToDate=function(str){splt=str.split("  ");date=splt[0].trim().split("/");month=parseInt(date[0])-1
day=parseInt(date[1])
hour=parseInt(splt[1].trim().split(":")[0])-1;dt=new Date(Date.UTC(dY.datetime.year,month,day,hour,30));return dt;}
dY.datetime.dateToHourOfYear=function(dt){start=new Date(Date.UTC(dY.datetime.year,0,1,0,30));diff=dt-start;hour=Math.floor(diff/(1000*60*60));return hour;}
dY.datetime.hourOfYearToDate=function(hr){return new Date((hr+0.5)*(1000*60*60));}